name: Auto Release

on:
  push:
    branches:
      - main

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2



    - name: Set up Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: '1.33.3'


    - name: Determine Release Version
      id: version
      run: |
        if [[ $(git log -1 --pretty=%B) =~ ^Release\ ([0-9]+\.[0-9]+\.[0-9]+) ]]; then
          echo "::set-output name=version::${BASH_REMATCH[1]}"
        else
          echo "::set-output name=version::"
        fi

    - name: Create Release
      if: steps.version.outputs.version != ''
      run: |
        deno run --allow-net --allow-read - <<EOF
        const token = Deno.env.get("GITHUB_TOKEN");
        consoloe.log(token)
        if (!token) {
          console.error("GitHub token is missing.");
          Deno.exit(1);
        }

        const response = await fetch("https://api.github.com/repos/artpani4/notion/releases", {
          method: "POST",
          headers: {
            "Authorization": `Bearer ${token}`,
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            tag_name: "${{ steps.version.outputs.version }}",
            name: "Release ${{ steps.version.outputs.version }}",
            body: "Release description for version ${{ steps.version.outputs.version }}",
          }),
        });

        if (response.status === 201) {
          console.log("Release created successfully.");
        } else {
          console.error("Failed to create release.");
          Deno.exit(1);
        }
        EOF
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
